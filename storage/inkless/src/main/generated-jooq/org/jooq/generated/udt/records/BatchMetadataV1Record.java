/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.udt.records;


import javax.annotation.processing.Generated;

import org.apache.kafka.common.Uuid;
import org.apache.kafka.common.record.TimestampType;
import org.jooq.generated.udt.BatchMetadataV1;
import org.jooq.impl.UDTRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.17",
        "schema version:6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BatchMetadataV1Record extends UDTRecordImpl<BatchMetadataV1Record> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>batch_metadata_v1.magic</code>.
     */
    public void setMagic(Short value) {
        set(0, value);
    }

    /**
     * Getter for <code>batch_metadata_v1.magic</code>.
     */
    public Short getMagic() {
        return (Short) get(0);
    }

    /**
     * Setter for <code>batch_metadata_v1.topic_id</code>.
     */
    public void setTopicId(Uuid value) {
        set(1, value);
    }

    /**
     * Getter for <code>batch_metadata_v1.topic_id</code>.
     */
    public Uuid getTopicId() {
        return (Uuid) get(1);
    }

    /**
     * Setter for <code>batch_metadata_v1.topic_name</code>.
     */
    public void setTopicName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>batch_metadata_v1.topic_name</code>.
     */
    public String getTopicName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>batch_metadata_v1.partition</code>.
     */
    public void setPartition(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>batch_metadata_v1.partition</code>.
     */
    public Integer getPartition() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>batch_metadata_v1.byte_offset</code>.
     */
    public void setByteOffset(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>batch_metadata_v1.byte_offset</code>.
     */
    public Long getByteOffset() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>batch_metadata_v1.byte_size</code>.
     */
    public void setByteSize(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>batch_metadata_v1.byte_size</code>.
     */
    public Long getByteSize() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>batch_metadata_v1.base_offset</code>.
     */
    public void setBaseOffset(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>batch_metadata_v1.base_offset</code>.
     */
    public Long getBaseOffset() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>batch_metadata_v1.last_offset</code>.
     */
    public void setLastOffset(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>batch_metadata_v1.last_offset</code>.
     */
    public Long getLastOffset() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>batch_metadata_v1.log_append_timestamp</code>.
     */
    public void setLogAppendTimestamp(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>batch_metadata_v1.log_append_timestamp</code>.
     */
    public Long getLogAppendTimestamp() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>batch_metadata_v1.batch_max_timestamp</code>.
     */
    public void setBatchMaxTimestamp(Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>batch_metadata_v1.batch_max_timestamp</code>.
     */
    public Long getBatchMaxTimestamp() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>batch_metadata_v1.timestamp_type</code>.
     */
    public void setTimestampType(TimestampType value) {
        set(10, value);
    }

    /**
     * Getter for <code>batch_metadata_v1.timestamp_type</code>.
     */
    public TimestampType getTimestampType() {
        return (TimestampType) get(10);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BatchMetadataV1Record
     */
    public BatchMetadataV1Record() {
        super(BatchMetadataV1.BATCH_METADATA_V1);
    }

    /**
     * Create a detached, initialised BatchMetadataV1Record
     */
    public BatchMetadataV1Record(Short magic, Uuid topicId, String topicName, Integer partition, Long byteOffset, Long byteSize, Long baseOffset, Long lastOffset, Long logAppendTimestamp, Long batchMaxTimestamp, TimestampType timestampType) {
        super(BatchMetadataV1.BATCH_METADATA_V1);

        setMagic(magic);
        setTopicId(topicId);
        setTopicName(topicName);
        setPartition(partition);
        setByteOffset(byteOffset);
        setByteSize(byteSize);
        setBaseOffset(baseOffset);
        setLastOffset(lastOffset);
        setLogAppendTimestamp(logAppendTimestamp);
        setBatchMaxTimestamp(batchMaxTimestamp);
        setTimestampType(timestampType);
        resetChangedOnNotNull();
    }
}
