/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.routines;


import io.aiven.inkless.control_plane.postgres.converters.OffsetDateTimeToInstantConverter;

import java.time.Instant;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.generated.DefaultSchema;
import org.jooq.generated.Domains;
import org.jooq.generated.udt.CommitFileMergeWorkItemBatchV1;
import org.jooq.generated.udt.CommitFileMergeWorkItemResponseV1;
import org.jooq.generated.udt.records.CommitFileMergeWorkItemBatchV1Record;
import org.jooq.generated.udt.records.CommitFileMergeWorkItemResponseV1Record;
import org.jooq.impl.AbstractRoutine;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.17",
        "schema version:5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommitFileMergeWorkItemV1 extends AbstractRoutine<CommitFileMergeWorkItemResponseV1Record> {

    private static final long serialVersionUID = 1L;

    /**
     * The parameter <code>commit_file_merge_work_item_v1.RETURN_VALUE</code>.
     */
    public static final Parameter<CommitFileMergeWorkItemResponseV1Record> RETURN_VALUE = Internal.createParameter("RETURN_VALUE", CommitFileMergeWorkItemResponseV1.COMMIT_FILE_MERGE_WORK_ITEM_RESPONSE_V1.getDataType(), false, false);

    /**
     * The parameter <code>commit_file_merge_work_item_v1.arg_now</code>.
     */
    public static final Parameter<Instant> ARG_NOW = Internal.createParameter("arg_now", SQLDataType.TIMESTAMPWITHTIMEZONE, false, false, new OffsetDateTimeToInstantConverter());

    /**
     * The parameter
     * <code>commit_file_merge_work_item_v1.arg_existing_work_item_id</code>.
     */
    public static final Parameter<Long> ARG_EXISTING_WORK_ITEM_ID = Internal.createParameter("arg_existing_work_item_id", SQLDataType.BIGINT, false, false);

    /**
     * The parameter <code>commit_file_merge_work_item_v1.arg_object_key</code>.
     */
    public static final Parameter<String> ARG_OBJECT_KEY = Internal.createParameter("arg_object_key", Domains.OBJECT_KEY_T.getDataType(), false, false);

    /**
     * The parameter <code>commit_file_merge_work_item_v1.arg_format</code>.
     */
    public static final Parameter<Short> ARG_FORMAT = Internal.createParameter("arg_format", Domains.FORMAT_T.getDataType(), false, false);

    /**
     * The parameter
     * <code>commit_file_merge_work_item_v1.arg_uploader_broker_id</code>.
     */
    public static final Parameter<Integer> ARG_UPLOADER_BROKER_ID = Internal.createParameter("arg_uploader_broker_id", Domains.BROKER_ID_T.getDataType(), false, false);

    /**
     * The parameter <code>commit_file_merge_work_item_v1.arg_file_size</code>.
     */
    public static final Parameter<Long> ARG_FILE_SIZE = Internal.createParameter("arg_file_size", Domains.BYTE_SIZE_T.getDataType(), false, false);

    /**
     * The parameter
     * <code>commit_file_merge_work_item_v1.arg_merge_file_batches</code>.
     */
    public static final Parameter<CommitFileMergeWorkItemBatchV1Record[]> ARG_MERGE_FILE_BATCHES = Internal.createParameter("arg_merge_file_batches", CommitFileMergeWorkItemBatchV1.COMMIT_FILE_MERGE_WORK_ITEM_BATCH_V1.getDataType().array(), false, false);

    /**
     * Create a new routine call instance
     */
    public CommitFileMergeWorkItemV1() {
        super("commit_file_merge_work_item_v1", DefaultSchema.DEFAULT_SCHEMA, CommitFileMergeWorkItemResponseV1.COMMIT_FILE_MERGE_WORK_ITEM_RESPONSE_V1.getDataType());

        setReturnParameter(RETURN_VALUE);
        addInParameter(ARG_NOW);
        addInParameter(ARG_EXISTING_WORK_ITEM_ID);
        addInParameter(ARG_OBJECT_KEY);
        addInParameter(ARG_FORMAT);
        addInParameter(ARG_UPLOADER_BROKER_ID);
        addInParameter(ARG_FILE_SIZE);
        addInParameter(ARG_MERGE_FILE_BATCHES);
    }

    /**
     * Set the <code>arg_now</code> parameter IN value to the routine
     */
    public void setArgNow(Instant value) {
        setValue(ARG_NOW, value);
    }

    /**
     * Set the <code>arg_now</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    public void setArgNow(Field<Instant> field) {
        setField(ARG_NOW, field);
    }

    /**
     * Set the <code>arg_existing_work_item_id</code> parameter IN value to the
     * routine
     */
    public void setArgExistingWorkItemId(Long value) {
        setValue(ARG_EXISTING_WORK_ITEM_ID, value);
    }

    /**
     * Set the <code>arg_existing_work_item_id</code> parameter to the function
     * to be used with a {@link org.jooq.Select} statement
     */
    public void setArgExistingWorkItemId(Field<Long> field) {
        setField(ARG_EXISTING_WORK_ITEM_ID, field);
    }

    /**
     * Set the <code>arg_object_key</code> parameter IN value to the routine
     */
    public void setArgObjectKey(String value) {
        setValue(ARG_OBJECT_KEY, value);
    }

    /**
     * Set the <code>arg_object_key</code> parameter to the function to be used
     * with a {@link org.jooq.Select} statement
     */
    public void setArgObjectKey(Field<String> field) {
        setField(ARG_OBJECT_KEY, field);
    }

    /**
     * Set the <code>arg_format</code> parameter IN value to the routine
     */
    public void setArgFormat(Short value) {
        setValue(ARG_FORMAT, value);
    }

    /**
     * Set the <code>arg_format</code> parameter to the function to be used with
     * a {@link org.jooq.Select} statement
     */
    public void setArgFormat(Field<Short> field) {
        setField(ARG_FORMAT, field);
    }

    /**
     * Set the <code>arg_uploader_broker_id</code> parameter IN value to the
     * routine
     */
    public void setArgUploaderBrokerId(Integer value) {
        setValue(ARG_UPLOADER_BROKER_ID, value);
    }

    /**
     * Set the <code>arg_uploader_broker_id</code> parameter to the function to
     * be used with a {@link org.jooq.Select} statement
     */
    public void setArgUploaderBrokerId(Field<Integer> field) {
        setField(ARG_UPLOADER_BROKER_ID, field);
    }

    /**
     * Set the <code>arg_file_size</code> parameter IN value to the routine
     */
    public void setArgFileSize(Long value) {
        setValue(ARG_FILE_SIZE, value);
    }

    /**
     * Set the <code>arg_file_size</code> parameter to the function to be used
     * with a {@link org.jooq.Select} statement
     */
    public void setArgFileSize(Field<Long> field) {
        setField(ARG_FILE_SIZE, field);
    }

    /**
     * Set the <code>arg_merge_file_batches</code> parameter IN value to the
     * routine
     */
    public void setArgMergeFileBatches(CommitFileMergeWorkItemBatchV1Record[] value) {
        setValue(ARG_MERGE_FILE_BATCHES, value);
    }

    /**
     * Set the <code>arg_merge_file_batches</code> parameter to the function to
     * be used with a {@link org.jooq.Select} statement
     */
    public void setArgMergeFileBatches(Field<CommitFileMergeWorkItemBatchV1Record[]> field) {
        setField(ARG_MERGE_FILE_BATCHES, field);
    }
}
