/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.routines;


import io.aiven.inkless.control_plane.postgres.converters.OffsetDateTimeToInstantConverter;

import java.time.Instant;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.generated.DefaultSchema;
import org.jooq.generated.Domains;
import org.jooq.generated.udt.CommitFileMergeWorkItemV1Batch;
import org.jooq.generated.udt.CommitFileMergeWorkItemV1Response;
import org.jooq.generated.udt.records.CommitFileMergeWorkItemV1BatchRecord;
import org.jooq.generated.udt.records.CommitFileMergeWorkItemV1ResponseRecord;
import org.jooq.impl.AbstractRoutine;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.17",
        "schema version:1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommitFileMergeWorkItemV1 extends AbstractRoutine<CommitFileMergeWorkItemV1ResponseRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The parameter <code>commit_file_merge_work_item_v1.RETURN_VALUE</code>.
     */
    public static final Parameter<CommitFileMergeWorkItemV1ResponseRecord> RETURN_VALUE = Internal.createParameter("RETURN_VALUE", CommitFileMergeWorkItemV1Response.COMMIT_FILE_MERGE_WORK_ITEM_V1_RESPONSE.getDataType(), false, false);

    /**
     * The parameter <code>commit_file_merge_work_item_v1.now</code>.
     */
    public static final Parameter<Instant> NOW = Internal.createParameter("now", SQLDataType.TIMESTAMPWITHTIMEZONE, false, false, new OffsetDateTimeToInstantConverter());

    /**
     * The parameter
     * <code>commit_file_merge_work_item_v1.existing_work_item_id</code>.
     */
    public static final Parameter<Long> EXISTING_WORK_ITEM_ID = Internal.createParameter("existing_work_item_id", SQLDataType.BIGINT, false, false);

    /**
     * The parameter <code>commit_file_merge_work_item_v1.object_key</code>.
     */
    public static final Parameter<String> OBJECT_KEY = Internal.createParameter("object_key", Domains.OBJECT_KEY_T.getDataType(), false, false);

    /**
     * The parameter
     * <code>commit_file_merge_work_item_v1.uploader_broker_id</code>.
     */
    public static final Parameter<Integer> UPLOADER_BROKER_ID = Internal.createParameter("uploader_broker_id", Domains.BROKER_ID_T.getDataType(), false, false);

    /**
     * The parameter <code>commit_file_merge_work_item_v1.file_size</code>.
     */
    public static final Parameter<Long> FILE_SIZE = Internal.createParameter("file_size", Domains.BYTE_SIZE_T.getDataType(), false, false);

    /**
     * The parameter
     * <code>commit_file_merge_work_item_v1.merge_file_batches</code>.
     */
    public static final Parameter<CommitFileMergeWorkItemV1BatchRecord[]> MERGE_FILE_BATCHES = Internal.createParameter("merge_file_batches", CommitFileMergeWorkItemV1Batch.COMMIT_FILE_MERGE_WORK_ITEM_V1_BATCH.getDataType().array(), false, false);

    /**
     * Create a new routine call instance
     */
    public CommitFileMergeWorkItemV1() {
        super("commit_file_merge_work_item_v1", DefaultSchema.DEFAULT_SCHEMA, CommitFileMergeWorkItemV1Response.COMMIT_FILE_MERGE_WORK_ITEM_V1_RESPONSE.getDataType());

        setReturnParameter(RETURN_VALUE);
        addInParameter(NOW);
        addInParameter(EXISTING_WORK_ITEM_ID);
        addInParameter(OBJECT_KEY);
        addInParameter(UPLOADER_BROKER_ID);
        addInParameter(FILE_SIZE);
        addInParameter(MERGE_FILE_BATCHES);
    }

    /**
     * Set the <code>now</code> parameter IN value to the routine
     */
    public void setNow(Instant value) {
        setValue(NOW, value);
    }

    /**
     * Set the <code>now</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    public void setNow(Field<Instant> field) {
        setField(NOW, field);
    }

    /**
     * Set the <code>existing_work_item_id</code> parameter IN value to the
     * routine
     */
    public void setExistingWorkItemId(Long value) {
        setValue(EXISTING_WORK_ITEM_ID, value);
    }

    /**
     * Set the <code>existing_work_item_id</code> parameter to the function to
     * be used with a {@link org.jooq.Select} statement
     */
    public void setExistingWorkItemId(Field<Long> field) {
        setField(EXISTING_WORK_ITEM_ID, field);
    }

    /**
     * Set the <code>object_key</code> parameter IN value to the routine
     */
    public void setObjectKey(String value) {
        setValue(OBJECT_KEY, value);
    }

    /**
     * Set the <code>object_key</code> parameter to the function to be used with
     * a {@link org.jooq.Select} statement
     */
    public void setObjectKey(Field<String> field) {
        setField(OBJECT_KEY, field);
    }

    /**
     * Set the <code>uploader_broker_id</code> parameter IN value to the routine
     */
    public void setUploaderBrokerId(Integer value) {
        setValue(UPLOADER_BROKER_ID, value);
    }

    /**
     * Set the <code>uploader_broker_id</code> parameter to the function to be
     * used with a {@link org.jooq.Select} statement
     */
    public void setUploaderBrokerId(Field<Integer> field) {
        setField(UPLOADER_BROKER_ID, field);
    }

    /**
     * Set the <code>file_size</code> parameter IN value to the routine
     */
    public void setFileSize(Long value) {
        setValue(FILE_SIZE, value);
    }

    /**
     * Set the <code>file_size</code> parameter to the function to be used with
     * a {@link org.jooq.Select} statement
     */
    public void setFileSize(Field<Long> field) {
        setField(FILE_SIZE, field);
    }

    /**
     * Set the <code>merge_file_batches</code> parameter IN value to the routine
     */
    public void setMergeFileBatches(CommitFileMergeWorkItemV1BatchRecord[] value) {
        setValue(MERGE_FILE_BATCHES, value);
    }

    /**
     * Set the <code>merge_file_batches</code> parameter to the function to be
     * used with a {@link org.jooq.Select} statement
     */
    public void setMergeFileBatches(Field<CommitFileMergeWorkItemV1BatchRecord[]> field) {
        setField(MERGE_FILE_BATCHES, field);
    }
}
