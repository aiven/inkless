/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables;


import io.aiven.inkless.control_plane.postgres.converters.OffsetDateTimeToInstantConverter;

import java.time.Instant;

import javax.annotation.processing.Generated;

import org.jooq.Condition;
import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.generated.DefaultSchema;
import org.jooq.generated.Domains;
import org.jooq.generated.tables.records.GetFileMergeWorkItemV1Record;
import org.jooq.impl.DSL;
import org.jooq.impl.DefaultDataType;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.YearToSecond;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.17",
        "schema version:9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class GetFileMergeWorkItemV1 extends TableImpl<GetFileMergeWorkItemV1Record> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>get_file_merge_work_item_v1</code>
     */
    public static final GetFileMergeWorkItemV1 GET_FILE_MERGE_WORK_ITEM_V1 = new GetFileMergeWorkItemV1();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GetFileMergeWorkItemV1Record> getRecordType() {
        return GetFileMergeWorkItemV1Record.class;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public final TableField<GetFileMergeWorkItemV1Record, Object> GET_FILE_MERGE_WORK_ITEM_V1_ = createField(DSL.name("get_file_merge_work_item_v1"), DefaultDataType.getDefaultDataType("\"file_merge_work_item_response_v1\""), this, "");

    private GetFileMergeWorkItemV1(Name alias, Table<GetFileMergeWorkItemV1Record> aliased) {
        this(alias, aliased, new Field[] {
            DSL.val(null, SQLDataType.TIMESTAMPWITHTIMEZONE.asConvertedDataType(new OffsetDateTimeToInstantConverter())),
            DSL.val(null, SQLDataType.INTERVAL),
            DSL.val(null, Domains.BYTE_SIZE_T.getDataType())
        });
    }

    private GetFileMergeWorkItemV1(Name alias, Table<GetFileMergeWorkItemV1Record> aliased, Field<?>[] parameters) {
        this(alias, aliased, parameters, null);
    }

    private GetFileMergeWorkItemV1(Name alias, Table<GetFileMergeWorkItemV1Record> aliased, Field<?>[] parameters, Condition where) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.function(), where);
    }

    /**
     * Create an aliased <code>get_file_merge_work_item_v1</code> table
     * reference
     */
    public GetFileMergeWorkItemV1(String alias) {
        this(DSL.name(alias), GET_FILE_MERGE_WORK_ITEM_V1);
    }

    /**
     * Create an aliased <code>get_file_merge_work_item_v1</code> table
     * reference
     */
    public GetFileMergeWorkItemV1(Name alias) {
        this(alias, GET_FILE_MERGE_WORK_ITEM_V1);
    }

    /**
     * Create a <code>get_file_merge_work_item_v1</code> table reference
     */
    public GetFileMergeWorkItemV1() {
        this(DSL.name("get_file_merge_work_item_v1"), null);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public GetFileMergeWorkItemV1 as(String alias) {
        return new GetFileMergeWorkItemV1(DSL.name(alias), this, parameters);
    }

    @Override
    public GetFileMergeWorkItemV1 as(Name alias) {
        return new GetFileMergeWorkItemV1(alias, this, parameters);
    }

    @Override
    public GetFileMergeWorkItemV1 as(Table<?> alias) {
        return new GetFileMergeWorkItemV1(alias.getQualifiedName(), this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public GetFileMergeWorkItemV1 rename(String name) {
        return new GetFileMergeWorkItemV1(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public GetFileMergeWorkItemV1 rename(Name name) {
        return new GetFileMergeWorkItemV1(name, null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public GetFileMergeWorkItemV1 rename(Table<?> name) {
        return new GetFileMergeWorkItemV1(name.getQualifiedName(), null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public GetFileMergeWorkItemV1 call(
          Instant argNow
        , YearToSecond argExpirationInterval
        , Long argMergeFileSizeThreshold
    ) {
        GetFileMergeWorkItemV1 result = new GetFileMergeWorkItemV1(DSL.name("get_file_merge_work_item_v1"), null, new Field[] {
            DSL.val(argNow, SQLDataType.TIMESTAMPWITHTIMEZONE.asConvertedDataType(new OffsetDateTimeToInstantConverter())),
            DSL.val(argExpirationInterval, SQLDataType.INTERVAL),
            DSL.val(argMergeFileSizeThreshold, Domains.BYTE_SIZE_T.getDataType())
        });

        return aliased() ? result.as(getUnqualifiedName()) : result;
    }

    /**
     * Call this table-valued function
     */
    public GetFileMergeWorkItemV1 call(
          Field<Instant> argNow
        , Field<YearToSecond> argExpirationInterval
        , Field<Long> argMergeFileSizeThreshold
    ) {
        GetFileMergeWorkItemV1 result = new GetFileMergeWorkItemV1(DSL.name("get_file_merge_work_item_v1"), null, new Field[] {
            argNow,
            argExpirationInterval,
            argMergeFileSizeThreshold
        });

        return aliased() ? result.as(getUnqualifiedName()) : result;
    }
}
