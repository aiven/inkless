/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.udt.records;


import javax.annotation.processing.Generated;

import org.apache.kafka.common.Uuid;
import org.jooq.generated.enums.CommitBatchResponseErrorV1;
import org.jooq.generated.udt.CommitBatchResponseV1;
import org.jooq.impl.UDTRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.17",
        "schema version:1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommitBatchResponseV1Record extends UDTRecordImpl<CommitBatchResponseV1Record> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>commit_batch_response_v1.topic_id</code>.
     */
    public void setTopicId(Uuid value) {
        set(0, value);
    }

    /**
     * Getter for <code>commit_batch_response_v1.topic_id</code>.
     */
    public Uuid getTopicId() {
        return (Uuid) get(0);
    }

    /**
     * Setter for <code>commit_batch_response_v1.partition</code>.
     */
    public void setPartition(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>commit_batch_response_v1.partition</code>.
     */
    public Integer getPartition() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>commit_batch_response_v1.log_start_offset</code>.
     */
    public void setLogStartOffset(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>commit_batch_response_v1.log_start_offset</code>.
     */
    public Long getLogStartOffset() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>commit_batch_response_v1.assigned_base_offset</code>.
     */
    public void setAssignedBaseOffset(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>commit_batch_response_v1.assigned_base_offset</code>.
     */
    public Long getAssignedBaseOffset() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>commit_batch_response_v1.batch_timestamp</code>.
     */
    public void setBatchTimestamp(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>commit_batch_response_v1.batch_timestamp</code>.
     */
    public Long getBatchTimestamp() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>commit_batch_response_v1.error</code>.
     */
    public void setError(CommitBatchResponseErrorV1 value) {
        set(5, value);
    }

    /**
     * Getter for <code>commit_batch_response_v1.error</code>.
     */
    public CommitBatchResponseErrorV1 getError() {
        return (CommitBatchResponseErrorV1) get(5);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CommitBatchResponseV1Record
     */
    public CommitBatchResponseV1Record() {
        super(CommitBatchResponseV1.COMMIT_BATCH_RESPONSE_V1);
    }

    /**
     * Create a detached, initialised CommitBatchResponseV1Record
     */
    public CommitBatchResponseV1Record(Uuid topicId, Integer partition, Long logStartOffset, Long assignedBaseOffset, Long batchTimestamp, CommitBatchResponseErrorV1 error) {
        super(CommitBatchResponseV1.COMMIT_BATCH_RESPONSE_V1);

        setTopicId(topicId);
        setPartition(partition);
        setLogStartOffset(logStartOffset);
        setAssignedBaseOffset(assignedBaseOffset);
        setBatchTimestamp(batchTimestamp);
        setError(error);
        resetChangedOnNotNull();
    }
}
