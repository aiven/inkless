/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.udt.records;


import javax.annotation.processing.Generated;

import org.apache.kafka.common.Uuid;
import org.jooq.generated.udt.ListOffsetsRequestV1;
import org.jooq.impl.UDTRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.17",
        "schema version:6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ListOffsetsRequestV1Record extends UDTRecordImpl<ListOffsetsRequestV1Record> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>list_offsets_request_v1.topic_id</code>.
     */
    public void setTopicId(Uuid value) {
        set(0, value);
    }

    /**
     * Getter for <code>list_offsets_request_v1.topic_id</code>.
     */
    public Uuid getTopicId() {
        return (Uuid) get(0);
    }

    /**
     * Setter for <code>list_offsets_request_v1.partition</code>.
     */
    public void setPartition(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>list_offsets_request_v1.partition</code>.
     */
    public Integer getPartition() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>list_offsets_request_v1.timestamp</code>.
     */
    public void setTimestamp(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>list_offsets_request_v1.timestamp</code>.
     */
    public Long getTimestamp() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ListOffsetsRequestV1Record
     */
    public ListOffsetsRequestV1Record() {
        super(ListOffsetsRequestV1.LIST_OFFSETS_REQUEST_V1);
    }

    /**
     * Create a detached, initialised ListOffsetsRequestV1Record
     */
    public ListOffsetsRequestV1Record(Uuid topicId, Integer partition, Long timestamp) {
        super(ListOffsetsRequestV1.LIST_OFFSETS_REQUEST_V1);

        setTopicId(topicId);
        setPartition(partition);
        setTimestamp(timestamp);
        resetChangedOnNotNull();
    }
}
