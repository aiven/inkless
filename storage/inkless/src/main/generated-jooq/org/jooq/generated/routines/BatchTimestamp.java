/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.routines;


import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.generated.DefaultSchema;
import org.jooq.generated.Domains;
import org.jooq.impl.AbstractRoutine;
import org.jooq.impl.Internal;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.17",
        "schema version:1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BatchTimestamp extends AbstractRoutine<Long> {

    private static final long serialVersionUID = 1L;

    /**
     * The parameter <code>batch_timestamp.RETURN_VALUE</code>.
     */
    public static final Parameter<Long> RETURN_VALUE = Internal.createParameter("RETURN_VALUE", Domains.TIMESTAMP_T.getDataType(), false, false);

    /**
     * The parameter <code>batch_timestamp.arg_timestamp_type</code>.
     */
    public static final Parameter<Short> ARG_TIMESTAMP_TYPE = Internal.createParameter("arg_timestamp_type", Domains.TIMESTAMP_TYPE_T.getDataType(), false, false);

    /**
     * The parameter <code>batch_timestamp.arg_batch_max_timestamp</code>.
     */
    public static final Parameter<Long> ARG_BATCH_MAX_TIMESTAMP = Internal.createParameter("arg_batch_max_timestamp", Domains.TIMESTAMP_T.getDataType(), false, false);

    /**
     * The parameter <code>batch_timestamp.arg_log_append_timestamp</code>.
     */
    public static final Parameter<Long> ARG_LOG_APPEND_TIMESTAMP = Internal.createParameter("arg_log_append_timestamp", Domains.TIMESTAMP_T.getDataType(), false, false);

    /**
     * Create a new routine call instance
     */
    public BatchTimestamp() {
        super("batch_timestamp", DefaultSchema.DEFAULT_SCHEMA, Domains.TIMESTAMP_T.getDataType());

        setReturnParameter(RETURN_VALUE);
        addInParameter(ARG_TIMESTAMP_TYPE);
        addInParameter(ARG_BATCH_MAX_TIMESTAMP);
        addInParameter(ARG_LOG_APPEND_TIMESTAMP);
    }

    /**
     * Set the <code>arg_timestamp_type</code> parameter IN value to the routine
     */
    public void setArgTimestampType(Short value) {
        setValue(ARG_TIMESTAMP_TYPE, value);
    }

    /**
     * Set the <code>arg_timestamp_type</code> parameter to the function to be
     * used with a {@link org.jooq.Select} statement
     */
    public void setArgTimestampType(Field<Short> field) {
        setField(ARG_TIMESTAMP_TYPE, field);
    }

    /**
     * Set the <code>arg_batch_max_timestamp</code> parameter IN value to the
     * routine
     */
    public void setArgBatchMaxTimestamp(Long value) {
        setValue(ARG_BATCH_MAX_TIMESTAMP, value);
    }

    /**
     * Set the <code>arg_batch_max_timestamp</code> parameter to the function to
     * be used with a {@link org.jooq.Select} statement
     */
    public void setArgBatchMaxTimestamp(Field<Long> field) {
        setField(ARG_BATCH_MAX_TIMESTAMP, field);
    }

    /**
     * Set the <code>arg_log_append_timestamp</code> parameter IN value to the
     * routine
     */
    public void setArgLogAppendTimestamp(Long value) {
        setValue(ARG_LOG_APPEND_TIMESTAMP, value);
    }

    /**
     * Set the <code>arg_log_append_timestamp</code> parameter to the function
     * to be used with a {@link org.jooq.Select} statement
     */
    public void setArgLogAppendTimestamp(Field<Long> field) {
        setField(ARG_LOG_APPEND_TIMESTAMP, field);
    }
}
