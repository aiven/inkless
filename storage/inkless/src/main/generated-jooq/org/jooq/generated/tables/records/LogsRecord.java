/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import javax.annotation.processing.Generated;

import org.apache.kafka.common.Uuid;
import org.jooq.Record2;
import org.jooq.generated.tables.Logs;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.17",
        "schema version:6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LogsRecord extends UpdatableRecordImpl<LogsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>logs.topic_id</code>.
     */
    public void setTopicId(Uuid value) {
        set(0, value);
    }

    /**
     * Getter for <code>logs.topic_id</code>.
     */
    public Uuid getTopicId() {
        return (Uuid) get(0);
    }

    /**
     * Setter for <code>logs.partition</code>.
     */
    public void setPartition(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>logs.partition</code>.
     */
    public Integer getPartition() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>logs.topic_name</code>.
     */
    public void setTopicName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>logs.topic_name</code>.
     */
    public String getTopicName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>logs.log_start_offset</code>.
     */
    public void setLogStartOffset(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>logs.log_start_offset</code>.
     */
    public Long getLogStartOffset() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>logs.high_watermark</code>.
     */
    public void setHighWatermark(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>logs.high_watermark</code>.
     */
    public Long getHighWatermark() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>logs.byte_size</code>.
     */
    public void setByteSize(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>logs.byte_size</code>.
     */
    public Long getByteSize() {
        return (Long) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Uuid, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LogsRecord
     */
    public LogsRecord() {
        super(Logs.LOGS);
    }

    /**
     * Create a detached, initialised LogsRecord
     */
    public LogsRecord(Uuid topicId, Integer partition, String topicName, Long logStartOffset, Long highWatermark, Long byteSize) {
        super(Logs.LOGS);

        setTopicId(topicId);
        setPartition(partition);
        setTopicName(topicName);
        setLogStartOffset(logStartOffset);
        setHighWatermark(highWatermark);
        setByteSize(byteSize);
        resetChangedOnNotNull();
    }
}
