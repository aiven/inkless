/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import java.time.Instant;

import javax.annotation.processing.Generated;

import org.jooq.Record1;
import org.jooq.generated.tables.FilesToDelete;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.17",
        "schema version:1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FilesToDeleteRecord extends UpdatableRecordImpl<FilesToDeleteRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>files_to_delete.file_id</code>.
     */
    public void setFileId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>files_to_delete.file_id</code>.
     */
    public Long getFileId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>files_to_delete.marked_for_deletion_at</code>.
     */
    public void setMarkedForDeletionAt(Instant value) {
        set(1, value);
    }

    /**
     * Getter for <code>files_to_delete.marked_for_deletion_at</code>.
     */
    public Instant getMarkedForDeletionAt() {
        return (Instant) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FilesToDeleteRecord
     */
    public FilesToDeleteRecord() {
        super(FilesToDelete.FILES_TO_DELETE);
    }

    /**
     * Create a detached, initialised FilesToDeleteRecord
     */
    public FilesToDeleteRecord(Long fileId, Instant markedForDeletionAt) {
        super(FilesToDelete.FILES_TO_DELETE);

        setFileId(fileId);
        setMarkedForDeletionAt(markedForDeletionAt);
        resetChangedOnNotNull();
    }
}
