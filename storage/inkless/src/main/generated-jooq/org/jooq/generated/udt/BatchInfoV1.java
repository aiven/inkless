/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.udt;


import javax.annotation.processing.Generated;

import org.jooq.Schema;
import org.jooq.UDTField;
import org.jooq.generated.DefaultSchema;
import org.jooq.generated.Domains;
import org.jooq.generated.udt.records.BatchInfoV1Record;
import org.jooq.generated.udt.records.BatchMetadataV1Record;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.SchemaImpl;
import org.jooq.impl.UDTImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.17",
        "schema version:8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class BatchInfoV1 extends UDTImpl<BatchInfoV1Record> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>batch_info_v1</code>
     */
    public static final BatchInfoV1 BATCH_INFO_V1 = new BatchInfoV1();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BatchInfoV1Record> getRecordType() {
        return BatchInfoV1Record.class;
    }

    /**
     * The attribute <code>batch_info_v1.batch_id</code>.
     */
    public static final UDTField<BatchInfoV1Record, Long> BATCH_ID = createField(DSL.name("batch_id"), SQLDataType.BIGINT, BATCH_INFO_V1, "");

    /**
     * The attribute <code>batch_info_v1.object_key</code>.
     */
    public static final UDTField<BatchInfoV1Record, String> OBJECT_KEY = createField(DSL.name("object_key"), Domains.OBJECT_KEY_T.getDataType().nullable(false), BATCH_INFO_V1, "");

    /**
     * The attribute <code>batch_info_v1.batch_metadata</code>.
     */
    public static final UDTField<BatchInfoV1Record, BatchMetadataV1Record> BATCH_METADATA = createField(DSL.name("batch_metadata"), BatchMetadataV1.BATCH_METADATA_V1.getDataType(), BATCH_INFO_V1, "");

    /**
     * No further instances allowed
     */
    private BatchInfoV1() {
        super(DSL.name("batch_info_v1"), null, null, false);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA != null ? DefaultSchema.DEFAULT_SCHEMA : new SchemaImpl(DSL.name(""));
    }
}
