/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.udt;


import io.aiven.inkless.control_plane.postgres.converters.UUIDtoUuidConverter;

import javax.annotation.processing.Generated;

import org.apache.kafka.common.Uuid;
import org.jooq.Schema;
import org.jooq.UDTField;
import org.jooq.generated.DefaultSchema;
import org.jooq.generated.Domains;
import org.jooq.generated.udt.records.EnforceRetentionRequestV1Record;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.SchemaImpl;
import org.jooq.impl.UDTImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.17",
        "schema version:7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EnforceRetentionRequestV1 extends UDTImpl<EnforceRetentionRequestV1Record> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>enforce_retention_request_v1</code>
     */
    public static final EnforceRetentionRequestV1 ENFORCE_RETENTION_REQUEST_V1 = new EnforceRetentionRequestV1();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EnforceRetentionRequestV1Record> getRecordType() {
        return EnforceRetentionRequestV1Record.class;
    }

    /**
     * The attribute <code>enforce_retention_request_v1.topic_id</code>.
     */
    public static final UDTField<EnforceRetentionRequestV1Record, Uuid> TOPIC_ID = createField(DSL.name("topic_id"), SQLDataType.UUID.nullable(false), ENFORCE_RETENTION_REQUEST_V1, "", new UUIDtoUuidConverter());

    /**
     * The attribute <code>enforce_retention_request_v1.partition</code>.
     */
    public static final UDTField<EnforceRetentionRequestV1Record, Integer> PARTITION = createField(DSL.name("partition"), Domains.PARTITION_T.getDataType().nullable(false), ENFORCE_RETENTION_REQUEST_V1, "");

    /**
     * The attribute <code>enforce_retention_request_v1.retention_bytes</code>.
     */
    public static final UDTField<EnforceRetentionRequestV1Record, Long> RETENTION_BYTES = createField(DSL.name("retention_bytes"), Domains.RETENTION_T.getDataType().nullable(false), ENFORCE_RETENTION_REQUEST_V1, "");

    /**
     * The attribute <code>enforce_retention_request_v1.retention_ms</code>.
     */
    public static final UDTField<EnforceRetentionRequestV1Record, Long> RETENTION_MS = createField(DSL.name("retention_ms"), Domains.RETENTION_T.getDataType().nullable(false), ENFORCE_RETENTION_REQUEST_V1, "");

    /**
     * No further instances allowed
     */
    private EnforceRetentionRequestV1() {
        super(DSL.name("enforce_retention_request_v1"), null, null, false);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA != null ? DefaultSchema.DEFAULT_SCHEMA : new SchemaImpl(DSL.name(""));
    }
}
