/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.udt.records;


import javax.annotation.processing.Generated;

import org.apache.kafka.common.Uuid;
import org.jooq.generated.enums.FindBatchesResponseErrorV1;
import org.jooq.generated.udt.FindBatchesResponseV1;
import org.jooq.impl.UDTRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.17",
        "schema version:8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class FindBatchesResponseV1Record extends UDTRecordImpl<FindBatchesResponseV1Record> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>find_batches_response_v1.topic_id</code>.
     */
    public void setTopicId(Uuid value) {
        set(0, value);
    }

    /**
     * Getter for <code>find_batches_response_v1.topic_id</code>.
     */
    public Uuid getTopicId() {
        return (Uuid) get(0);
    }

    /**
     * Setter for <code>find_batches_response_v1.partition</code>.
     */
    public void setPartition(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>find_batches_response_v1.partition</code>.
     */
    public Integer getPartition() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>find_batches_response_v1.log_start_offset</code>.
     */
    public void setLogStartOffset(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>find_batches_response_v1.log_start_offset</code>.
     */
    public Long getLogStartOffset() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>find_batches_response_v1.high_watermark</code>.
     */
    public void setHighWatermark(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>find_batches_response_v1.high_watermark</code>.
     */
    public Long getHighWatermark() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>find_batches_response_v1.batches</code>.
     */
    public void setBatches(BatchInfoV1Record[] value) {
        set(4, value);
    }

    /**
     * Getter for <code>find_batches_response_v1.batches</code>.
     */
    public BatchInfoV1Record[] getBatches() {
        return (BatchInfoV1Record[]) get(4);
    }

    /**
     * Setter for <code>find_batches_response_v1.error</code>.
     */
    public void setError(FindBatchesResponseErrorV1 value) {
        set(5, value);
    }

    /**
     * Getter for <code>find_batches_response_v1.error</code>.
     */
    public FindBatchesResponseErrorV1 getError() {
        return (FindBatchesResponseErrorV1) get(5);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FindBatchesResponseV1Record
     */
    public FindBatchesResponseV1Record() {
        super(FindBatchesResponseV1.FIND_BATCHES_RESPONSE_V1);
    }

    /**
     * Create a detached, initialised FindBatchesResponseV1Record
     */
    public FindBatchesResponseV1Record(Uuid topicId, Integer partition, Long logStartOffset, Long highWatermark, BatchInfoV1Record[] batches, FindBatchesResponseErrorV1 error) {
        super(FindBatchesResponseV1.FIND_BATCHES_RESPONSE_V1);

        setTopicId(topicId);
        setPartition(partition);
        setLogStartOffset(logStartOffset);
        setHighWatermark(highWatermark);
        setBatches(batches);
        setError(error);
        resetChangedOnNotNull();
    }
}
