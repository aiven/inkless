/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.udt.paths;


import javax.annotation.processing.Generated;

import org.jooq.Binding;
import org.jooq.Comment;
import org.jooq.DataType;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.RecordQualifier;
import org.jooq.UDTField;
import org.jooq.generated.Domains;
import org.jooq.generated.udt.BatchInfoV1;
import org.jooq.generated.udt.BatchMetadataV1;
import org.jooq.generated.udt.records.BatchInfoV1Record;
import org.jooq.generated.udt.records.BatchMetadataV1Record;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.UDTPathTableFieldImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.17",
        "schema version:9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class BatchInfoV1Path<R extends Record, T> extends UDTPathTableFieldImpl<R, BatchInfoV1Record, T> {

    private static final long serialVersionUID = 1L;

    /**
     * The attribute <code>batch_info_v1.batch_id</code>.
     */
    public final UDTField<BatchInfoV1Record, Long> BATCH_ID = Internal.createUDTPathField(DSL.name("batch_id"), SQLDataType.BIGINT, this, "", UDTField.class);

    /**
     * The attribute <code>batch_info_v1.object_key</code>.
     */
    public final UDTField<BatchInfoV1Record, String> OBJECT_KEY = Internal.createUDTPathField(DSL.name("object_key"), Domains.OBJECT_KEY_T.getDataType().nullable(false), this, "", UDTField.class);

    /**
     * The attribute <code>batch_info_v1.batch_metadata</code>.
     */
    public final BatchMetadataV1Path<BatchInfoV1Record, BatchMetadataV1Record> BATCH_METADATA = Internal.createUDTPathField(DSL.name("batch_metadata"), BatchMetadataV1.BATCH_METADATA_V1.getDataType(), this, "", BatchMetadataV1Path.class);

    public BatchInfoV1Path(Name name, DataType<T> type, RecordQualifier<R> qualifier, Comment comment, Binding<?, T> binding) {
        super(name, type, qualifier, BatchInfoV1.BATCH_INFO_V1, comment, binding);
    }
}
