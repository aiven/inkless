/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.udt;


import io.aiven.inkless.control_plane.postgres.converters.UUIDtoUuidConverter;

import javax.annotation.processing.Generated;

import org.apache.kafka.common.Uuid;
import org.jooq.Schema;
import org.jooq.UDTField;
import org.jooq.generated.DefaultSchema;
import org.jooq.generated.Domains;
import org.jooq.generated.enums.EnforceRetentionResponseErrorV1;
import org.jooq.generated.udt.records.EnforceRetentionResponseV1Record;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.SchemaImpl;
import org.jooq.impl.UDTImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.17",
        "schema version:5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EnforceRetentionResponseV1 extends UDTImpl<EnforceRetentionResponseV1Record> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>enforce_retention_response_v1</code>
     */
    public static final EnforceRetentionResponseV1 ENFORCE_RETENTION_RESPONSE_V1 = new EnforceRetentionResponseV1();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EnforceRetentionResponseV1Record> getRecordType() {
        return EnforceRetentionResponseV1Record.class;
    }

    /**
     * The attribute <code>enforce_retention_response_v1.topic_id</code>.
     */
    public static final UDTField<EnforceRetentionResponseV1Record, Uuid> TOPIC_ID = createField(DSL.name("topic_id"), SQLDataType.UUID.nullable(false), ENFORCE_RETENTION_RESPONSE_V1, "", new UUIDtoUuidConverter());

    /**
     * The attribute <code>enforce_retention_response_v1.partition</code>.
     */
    public static final UDTField<EnforceRetentionResponseV1Record, Integer> PARTITION = createField(DSL.name("partition"), Domains.PARTITION_T.getDataType().nullable(false), ENFORCE_RETENTION_RESPONSE_V1, "");

    /**
     * The attribute <code>enforce_retention_response_v1.error</code>.
     */
    public static final UDTField<EnforceRetentionResponseV1Record, EnforceRetentionResponseErrorV1> ERROR = createField(DSL.name("error"), SQLDataType.VARCHAR.asEnumDataType(EnforceRetentionResponseErrorV1.class), ENFORCE_RETENTION_RESPONSE_V1, "");

    /**
     * The attribute <code>enforce_retention_response_v1.batches_deleted</code>.
     */
    public static final UDTField<EnforceRetentionResponseV1Record, Integer> BATCHES_DELETED = createField(DSL.name("batches_deleted"), SQLDataType.INTEGER, ENFORCE_RETENTION_RESPONSE_V1, "");

    /**
     * The attribute <code>enforce_retention_response_v1.bytes_deleted</code>.
     */
    public static final UDTField<EnforceRetentionResponseV1Record, Long> BYTES_DELETED = createField(DSL.name("bytes_deleted"), SQLDataType.BIGINT, ENFORCE_RETENTION_RESPONSE_V1, "");

    /**
     * The attribute
     * <code>enforce_retention_response_v1.log_start_offset</code>.
     */
    public static final UDTField<EnforceRetentionResponseV1Record, Long> LOG_START_OFFSET = createField(DSL.name("log_start_offset"), Domains.OFFSET_NULLABLE_T.getDataType(), ENFORCE_RETENTION_RESPONSE_V1, "");

    /**
     * No further instances allowed
     */
    private EnforceRetentionResponseV1() {
        super(DSL.name("enforce_retention_response_v1"), null, null, false);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA != null ? DefaultSchema.DEFAULT_SCHEMA : new SchemaImpl(DSL.name(""));
    }
}
