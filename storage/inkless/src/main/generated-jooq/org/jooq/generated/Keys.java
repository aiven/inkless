/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated;


import javax.annotation.processing.Generated;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.generated.tables.Batches;
import org.jooq.generated.tables.FileMergeWorkItemFiles;
import org.jooq.generated.tables.FileMergeWorkItems;
import org.jooq.generated.tables.Files;
import org.jooq.generated.tables.Logs;
import org.jooq.generated.tables.ProducerState;
import org.jooq.generated.tables.records.BatchesRecord;
import org.jooq.generated.tables.records.FileMergeWorkItemFilesRecord;
import org.jooq.generated.tables.records.FileMergeWorkItemsRecord;
import org.jooq.generated.tables.records.FilesRecord;
import org.jooq.generated.tables.records.LogsRecord;
import org.jooq.generated.tables.records.ProducerStateRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.17",
        "schema version:5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<BatchesRecord> BATCHES_PKEY = Internal.createUniqueKey(Batches.BATCHES, DSL.name("batches_pkey"), new TableField[] { Batches.BATCHES.BATCH_ID }, true);
    public static final UniqueKey<FileMergeWorkItemFilesRecord> FILE_MERGE_WORK_ITEM_FILES_PKEY = Internal.createUniqueKey(FileMergeWorkItemFiles.FILE_MERGE_WORK_ITEM_FILES, DSL.name("file_merge_work_item_files_pkey"), new TableField[] { FileMergeWorkItemFiles.FILE_MERGE_WORK_ITEM_FILES.WORK_ITEM_ID, FileMergeWorkItemFiles.FILE_MERGE_WORK_ITEM_FILES.FILE_ID }, true);
    public static final UniqueKey<FileMergeWorkItemsRecord> FILE_MERGE_WORK_ITEMS_PKEY = Internal.createUniqueKey(FileMergeWorkItems.FILE_MERGE_WORK_ITEMS, DSL.name("file_merge_work_items_pkey"), new TableField[] { FileMergeWorkItems.FILE_MERGE_WORK_ITEMS.WORK_ITEM_ID }, true);
    public static final UniqueKey<FilesRecord> FILES_OBJECT_KEY_KEY = Internal.createUniqueKey(Files.FILES, DSL.name("files_object_key_key"), new TableField[] { Files.FILES.OBJECT_KEY }, true);
    public static final UniqueKey<FilesRecord> FILES_PKEY = Internal.createUniqueKey(Files.FILES, DSL.name("files_pkey"), new TableField[] { Files.FILES.FILE_ID }, true);
    public static final UniqueKey<LogsRecord> LOGS_PKEY = Internal.createUniqueKey(Logs.LOGS, DSL.name("logs_pkey"), new TableField[] { Logs.LOGS.TOPIC_ID, Logs.LOGS.PARTITION }, true);
    public static final UniqueKey<ProducerStateRecord> PRODUCER_STATE_PKEY = Internal.createUniqueKey(ProducerState.PRODUCER_STATE, DSL.name("producer_state_pkey"), new TableField[] { ProducerState.PRODUCER_STATE.TOPIC_ID, ProducerState.PRODUCER_STATE.PARTITION, ProducerState.PRODUCER_STATE.PRODUCER_ID, ProducerState.PRODUCER_STATE.ROW_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<BatchesRecord, FilesRecord> BATCHES__FK_BATCHES_FILES = Internal.createForeignKey(Batches.BATCHES, DSL.name("fk_batches_files"), new TableField[] { Batches.BATCHES.FILE_ID }, Keys.FILES_PKEY, new TableField[] { Files.FILES.FILE_ID }, true);
    public static final ForeignKey<BatchesRecord, LogsRecord> BATCHES__FK_BATCHES_LOGS = Internal.createForeignKey(Batches.BATCHES, DSL.name("fk_batches_logs"), new TableField[] { Batches.BATCHES.TOPIC_ID, Batches.BATCHES.PARTITION }, Keys.LOGS_PKEY, new TableField[] { Logs.LOGS.TOPIC_ID, Logs.LOGS.PARTITION }, true);
    public static final ForeignKey<FileMergeWorkItemFilesRecord, FilesRecord> FILE_MERGE_WORK_ITEM_FILES__FILE_MERGE_WORK_ITEM_FILES_FILE_ID_FKEY = Internal.createForeignKey(FileMergeWorkItemFiles.FILE_MERGE_WORK_ITEM_FILES, DSL.name("file_merge_work_item_files_file_id_fkey"), new TableField[] { FileMergeWorkItemFiles.FILE_MERGE_WORK_ITEM_FILES.FILE_ID }, Keys.FILES_PKEY, new TableField[] { Files.FILES.FILE_ID }, true);
    public static final ForeignKey<FileMergeWorkItemFilesRecord, FileMergeWorkItemsRecord> FILE_MERGE_WORK_ITEM_FILES__FILE_MERGE_WORK_ITEM_FILES_WORK_ITEM_ID_FKEY = Internal.createForeignKey(FileMergeWorkItemFiles.FILE_MERGE_WORK_ITEM_FILES, DSL.name("file_merge_work_item_files_work_item_id_fkey"), new TableField[] { FileMergeWorkItemFiles.FILE_MERGE_WORK_ITEM_FILES.WORK_ITEM_ID }, Keys.FILE_MERGE_WORK_ITEMS_PKEY, new TableField[] { FileMergeWorkItems.FILE_MERGE_WORK_ITEMS.WORK_ITEM_ID }, true);
}
