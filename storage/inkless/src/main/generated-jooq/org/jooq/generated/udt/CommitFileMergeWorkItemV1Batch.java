/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.udt;


import javax.annotation.processing.Generated;

import org.jooq.Schema;
import org.jooq.UDTField;
import org.jooq.generated.DefaultSchema;
import org.jooq.generated.udt.records.BatchMetadataV1Record;
import org.jooq.generated.udt.records.CommitFileMergeWorkItemV1BatchRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.SchemaImpl;
import org.jooq.impl.UDTImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.17",
        "schema version:1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommitFileMergeWorkItemV1Batch extends UDTImpl<CommitFileMergeWorkItemV1BatchRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>commit_file_merge_work_item_v1_batch</code>
     */
    public static final CommitFileMergeWorkItemV1Batch COMMIT_FILE_MERGE_WORK_ITEM_V1_BATCH = new CommitFileMergeWorkItemV1Batch();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CommitFileMergeWorkItemV1BatchRecord> getRecordType() {
        return CommitFileMergeWorkItemV1BatchRecord.class;
    }

    /**
     * The attribute <code>commit_file_merge_work_item_v1_batch.metadata</code>.
     */
    public static final UDTField<CommitFileMergeWorkItemV1BatchRecord, BatchMetadataV1Record> METADATA = createField(DSL.name("metadata"), BatchMetadataV1.BATCH_METADATA_V1.getDataType(), COMMIT_FILE_MERGE_WORK_ITEM_V1_BATCH, "");

    /**
     * The attribute
     * <code>commit_file_merge_work_item_v1_batch.parent_batch_ids</code>.
     */
    public static final UDTField<CommitFileMergeWorkItemV1BatchRecord, Long[]> PARENT_BATCH_IDS = createField(DSL.name("parent_batch_ids"), SQLDataType.BIGINT.array(), COMMIT_FILE_MERGE_WORK_ITEM_V1_BATCH, "");

    /**
     * No further instances allowed
     */
    private CommitFileMergeWorkItemV1Batch() {
        super(DSL.name("commit_file_merge_work_item_v1_batch"), null, null, false);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA != null ? DefaultSchema.DEFAULT_SCHEMA : new SchemaImpl(DSL.name(""));
    }
}
