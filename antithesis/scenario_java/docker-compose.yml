services:
  workload:
    image: us-central1-docker.pkg.dev/molten-verve-216720/aiven-repository/inkless-workload-java
    depends_on:
      - storage
      - postgres
      - broker1
      - broker2
      - broker3

  postgres:
    image: postgres:17.2
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: "inkless"
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: "admin"
    command: >
      postgres
      -c shared_preload_libraries='pg_stat_statements'
      -c pg_stat_statements.track='all'
    volumes:
      - ./../../../extra/postgres/init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --dbname=inkless -U admin"]
      interval: 5s
      timeout: 20s
      retries: 20

  storage:
    image: quay.io/minio/minio:RELEASE.2025-09-07T16-13-09Z
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"

  create_bucket:
    image: quay.io/minio/mc:RELEASE.2025-08-13T08-35-41Z
    restart: "no"
    depends_on:
      - storage
    entrypoint: >
      /bin/sh -c "
      until /usr/bin/mc alias set local http://storage:9000 minioadmin minioadmin; do
        echo 'Waiting for Minio...';
        sleep 5;
      done;
      /usr/bin/mc mb local/inkless;
      exit 0;
      "
  broker1: &base-broker
    image: aivenoy/kafka:4.1.0-inkless-SNAPSHOT
    restart: unless-stopped
    ports:
      - "9092:9092"
    environment: &base-broker-env
      CLUSTER_ID: "4L6g3nShT-eMCtK--X86sw"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_NODE_ID: 1
      KAFKA_BROKER_RACK: "az1"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@broker1:29090,2@broker2:29090,3@broker3:29090"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_LISTENERS: "CONTROLLER://:29090,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker1:19092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2

      KAFKA_DISKLESS_STORAGE_SYSTEM_ENABLE: "true"
      KAFKA_LOG_DISKLESS_ENABLE: "true"
      KAFKA_INKLESS_CONSUME_CACHE_MAX_COUNT: "100"

      KAFKA_INKLESS_CONTROL_PLANE_CLASS: "io.aiven.inkless.control_plane.postgres.PostgresControlPlane"
      KAFKA_INKLESS_CONTROL_PLANE_CONNECTION_STRING: "jdbc:postgresql://postgres:5432/inkless"
      KAFKA_INKLESS_CONTROL_PLANE_USERNAME: "admin"
      KAFKA_INKLESS_CONTROL_PLANE_PASSWORD: "admin"

      KAFKA_INKLESS_STORAGE_BACKEND_CLASS: "io.aiven.inkless.storage_backend.s3.S3Storage"
      KAFKA_INKLESS_STORAGE_S3_PATH_STYLE_ACCESS_ENABLED: "true"
      KAFKA_INKLESS_STORAGE_S3_BUCKET_NAME: "inkless"
      KAFKA_INKLESS_STORAGE_S3_REGION: "us-east-1"
      KAFKA_INKLESS_STORAGE_S3_ENDPOINT_URL: "http://storage:9000"
      KAFKA_INKLESS_STORAGE_AWS_ACCESS_KEY_ID: "minioadmin"
      KAFKA_INKLESS_STORAGE_AWS_SECRET_ACCESS_KEY: "minioadmin"
    healthcheck:
      test: [ "CMD-SHELL", "/opt/kafka/bin/kafka-topics.sh --bootstrap-server broker1:19092 --list" ]
      interval: 5s
      timeout: 20s
      retries: 20
    depends_on:
      postgres:
        condition: service_healthy

  broker2:
    <<: *base-broker
    ports:
      - "9093:9093"
    environment:
      <<: *base-broker-env
      KAFKA_NODE_ID: 2
      KAFKA_BROKER_RACK: "az2"
      KAFKA_LISTENERS: "CONTROLLER://:29090,PLAINTEXT_HOST://:9093,PLAINTEXT://:19093"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT_HOST://localhost:9093,PLAINTEXT://broker2:19093"
    healthcheck:
      test: [ "CMD-SHELL", "/opt/kafka/bin/kafka-topics.sh --bootstrap-server broker2:19093 --list" ]
      interval: 5s
      timeout: 20s
      retries: 20

  broker3:
    <<: *base-broker
    ports:
      - "9094:9094"
    environment:
      <<: *base-broker-env
      KAFKA_NODE_ID: 3
      KAFKA_BROKER_RACK: "az3"
      KAFKA_LISTENERS: "CONTROLLER://:29090,PLAINTEXT_HOST://:9094,PLAINTEXT://:19094"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT_HOST://localhost:9094,PLAINTEXT://broker3:19094"
    healthcheck:
      test: [ "CMD-SHELL", "/opt/kafka/bin/kafka-topics.sh --bootstrap-server broker3:19094 --list" ]
      interval: 5s
      timeout: 20s
      retries: 20
